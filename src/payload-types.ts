/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LinkGroup".
 */
export type LinkGroup =
  | {
      link: Link;
      id?: string | null;
    }[]
  | null;
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LinkCards".
 */
export type LinkCards =
  | {
      linkType?: ('link' | 'video') | null;
      title: string;
      description: string;
      imageUploadOption?: ('generate' | 'manual') | null;
      /**
       * Coma seperated words
       */
      keywords?: string | null;
      image?: (string | null) | Media;
      href: string;
      id?: string | null;
    }[]
  | null;
/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    admins: AdminAuthOperations;
    clients: ClientAuthOperations;
  };
  blocks: {};
  collections: {
    pages: Page;
    bookings: Booking;
    forms: Form;
    'form-submissions': FormSubmission;
    media: Media;
    'private-media': PrivateMedia;
    admins: Admin;
    technicians: Technician;
    clients: Client;
    'drug-tests': DrugTest;
    exports: Export;
    redirects: Redirect;
    'payload-jobs': PayloadJob;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {
    clients: {
      drugTests: 'drug-tests';
      bookings: 'bookings';
      privateDocuments: 'private-media';
    };
  };
  collectionsSelect: {
    pages: PagesSelect<false> | PagesSelect<true>;
    bookings: BookingsSelect<false> | BookingsSelect<true>;
    forms: FormsSelect<false> | FormsSelect<true>;
    'form-submissions': FormSubmissionsSelect<false> | FormSubmissionsSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    'private-media': PrivateMediaSelect<false> | PrivateMediaSelect<true>;
    admins: AdminsSelect<false> | AdminsSelect<true>;
    technicians: TechniciansSelect<false> | TechniciansSelect<true>;
    clients: ClientsSelect<false> | ClientsSelect<true>;
    'drug-tests': DrugTestsSelect<false> | DrugTestsSelect<true>;
    exports: ExportsSelect<false> | ExportsSelect<true>;
    redirects: RedirectsSelect<false> | RedirectsSelect<true>;
    'payload-jobs': PayloadJobsSelect<false> | PayloadJobsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    header: Header;
    footer: Footer;
    'company-info': CompanyInfo;
  };
  globalsSelect: {
    header: HeaderSelect<false> | HeaderSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
    'company-info': CompanyInfoSelect<false> | CompanyInfoSelect<true>;
  };
  locale: null;
  user:
    | (Admin & {
        collection: 'admins';
      })
    | (Client & {
        collection: 'clients';
      });
  jobs: {
    tasks: {
      createCollectionExport: TaskCreateCollectionExport;
      inline: {
        input: unknown;
        output: unknown;
      };
    };
    workflows: unknown;
  };
}
export interface AdminAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
export interface ClientAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: string;
  title: string;
  layout: (
    | CalendarEmbedBlock
    | Hero
    | About
    | TrustBlock
    | TechniciansBlock
    | RichTextBlock
    | LinksBlock
    | FormBlock
    | TwoColumnLayoutBlock
    | LayoutBlock
    | SchedulePageBlock
  )[];
  meta?: {
    hideFromSearchEngines?: boolean | null;
    metadata?: {
      title?: string | null;
      /**
       * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
       */
      image?: (string | null) | Media;
      description?: string | null;
    };
  };
  publishedAt?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CalendarEmbedBlock".
 */
export interface CalendarEmbedBlock {
  title?: string | null;
  description?: string | null;
  calLink: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'calendarEmbed';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Hero".
 */
export interface Hero {
  type: 'highImpact' | 'mediumImpact';
  highImpact?: {
    title: string;
    description: string;
    links?: LinkGroup;
  };
  mediumImpact?: {
    subtitle?: string | null;
    title: string;
    heading?: ('h1' | 'h2') | null;
    description?: string | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'hero';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Link".
 */
export interface Link {
  type?: ('reference' | 'custom') | null;
  newTab?: boolean | null;
  reference?:
    | ({
        relationTo: 'pages';
        value: string | Page;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null);
  url?: string | null;
  label: string;
  /**
   * Choose how the link should be rendered.
   */
  appearance?: ('default' | 'outline') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  /**
   * Alternative text for SEO and accessibility
   */
  alt: string;
  caption?: string | null;
  prefix?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    meta?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "About".
 */
export interface About {
  /**
   * Toggle to show/hide the about section on the page
   */
  enabled?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'about';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TrustBlock".
 */
export interface TrustBlock {
  heading?: string | null;
  description?: string | null;
  features?:
    | {
        title: string;
        description?: string | null;
        icon?: string | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'trust';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TechniciansBlock".
 */
export interface TechniciansBlock {
  heading?: string | null;
  description?: string | null;
  maxTechnicians?: number | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'techniciansBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "RichTextBlock".
 */
export interface RichTextBlock {
  subtitle?: string | null;
  richContent?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  priority?: boolean | null;
  images?: (string | Media)[] | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'richText';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LinksBlock".
 */
export interface LinksBlock {
  title: string;
  description?: string | null;
  linkCards?: LinkCards;
  id?: string | null;
  blockName?: string | null;
  blockType: 'linksBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock".
 */
export interface FormBlock {
  form: string | Form;
  enableIntro?: boolean | null;
  introContent?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'formBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: string;
  title: string;
  formType: 'dynamic' | 'static';
  fields?:
    | (
        | CheckboxFormField
        | CountryFormField
        | EmailFormField
        | {
            message?: {
              root: {
                type: string;
                children: {
                  type: any;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'message';
          }
        | NumberFormField
        | SelectFormField
        | StateFormField
        | TextFormField
        | TextareaFormField
        | PhoneFormField
        | ArrayFormField
        | GroupFormField
      )[]
    | null;
  form?: ('contact' | 'registration') | null;
  submitButtonLabel?: string | null;
  /**
   * Choose whether to display an on-page message or redirect to a different page after they submit the form.
   */
  confirmationType?: ('message' | 'redirect') | null;
  confirmationMessage?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  redirect?: {
    type?: ('reference' | 'custom') | null;
    reference?: {
      relationTo: 'pages';
      value: string | Page;
    } | null;
    url?: string | null;
  };
  /**
   * Send custom emails when the form submits. Use comma separated lists to send the same email to multiple recipients. To reference a value from this form, wrap that field's name with double curly brackets, i.e. {{firstName}}. You can use a wildcard {{*}} to output all data and {{*:table}} to format it as an HTML table in the email.
   */
  emails?:
    | {
        emailTo?: string | null;
        cc?: string | null;
        bcc?: string | null;
        replyTo?: string | null;
        emailFrom?: string | null;
        subject: string;
        /**
         * Enter the message that should be sent in this email.
         */
        message?: {
          root: {
            type: string;
            children: {
              type: any;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CheckboxFormField".
 */
export interface CheckboxFormField {
  name: string;
  label?: string | null;
  colSpan: '1' | '2';
  errorMsg?: string | null;
  defaultValue?: boolean | null;
  required?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'checkbox';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CountryFormField".
 */
export interface CountryFormField {
  name: string;
  label?: string | null;
  /**
   * form defaults to spanning the full two columns
   */
  colSpan: '1' | '2';
  required?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'country';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "EmailFormField".
 */
export interface EmailFormField {
  name: string;
  label?: string | null;
  /**
   * form defaults to spanning the full two columns
   */
  colSpan: '1' | '2';
  required?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'email';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "NumberFormField".
 */
export interface NumberFormField {
  name: string;
  label?: string | null;
  colSpan: '1' | '2';
  defaultValue?: number | null;
  min?: number | null;
  minError?: string | null;
  max?: number | null;
  maxError?: string | null;
  required?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'number';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "SelectFormField".
 */
export interface SelectFormField {
  name: string;
  label?: string | null;
  colSpan: '1' | '2';
  defaultValue?: string | null;
  options?:
    | {
        label: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  required?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'select';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "StateFormField".
 */
export interface StateFormField {
  name: string;
  label?: string | null;
  /**
   * form defaults to spanning the full two columns
   */
  colSpan: '1' | '2';
  required?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'state';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TextFormField".
 */
export interface TextFormField {
  name: string;
  label?: string | null;
  colSpan: '1' | '2';
  defaultValue?: string | null;
  required?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'text';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TextareaFormField".
 */
export interface TextareaFormField {
  name: string;
  label?: string | null;
  colSpan: '1' | '2';
  defaultValue?: string | null;
  required?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'textarea';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PhoneFormField".
 */
export interface PhoneFormField {
  name: string;
  label?: string | null;
  /**
   * form defaults to spanning the full two columns
   */
  colSpan: '1' | '2';
  required?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'phone';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArrayFormField".
 */
export interface ArrayFormField {
  name: string;
  label: string;
  title?: string | null;
  description?: string | null;
  colSpan: '1' | '2';
  minRows: number;
  maxRows: number;
  fields: (TextFormField | TextareaFormField | EmailFormField | NumberFormField | CheckboxFormField | PhoneFormField)[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'array';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "GroupFormField".
 */
export interface GroupFormField {
  name: string;
  title?: string | null;
  description?: string | null;
  fields: (
    | TextFormField
    | TextareaFormField
    | EmailFormField
    | NumberFormField
    | CheckboxFormField
    | PhoneFormField
    | ArrayFormField
    | SelectFormField
    | StateFormField
    | CountryFormField
  )[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'group';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TwoColumnLayoutBlock".
 */
export interface TwoColumnLayoutBlock {
  /**
   * The direction of the layout
   */
  direction?: ('ltr' | 'rtl') | null;
  /**
   * The breakpoint at which the layout switches to a two column layout
   */
  breakpoint?: ('sm' | 'md' | 'lg' | 'xl') | null;
  columnOne?: {
    contentType?: ('cta' | 'richText') | null;
    verticalAlignment?: ('top' | 'center' | 'bottom') | null;
    richText?: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    cta?: {
      hasSubtitle?: boolean | null;
      subtitle?: {
        icon?: string | null;
        text?: string | null;
      };
      title: string;
      heading?: ('h1' | 'h2') | null;
      description: string;
      links?: LinkGroup;
    };
  };
  columnTwo?: {
    contentType?: ('image' | 'form' | 'calendarEmbed') | null;
    priority?: boolean | null;
    /**
     * Images will follow as user scrolls
     */
    sticky?: boolean | null;
    images?: (string | Media)[] | null;
    form?: FormBlock[] | null;
    calendarEmbed?: CalendarEmbedBlock[] | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'TwoColumnLayout';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LayoutBlock".
 */
export interface LayoutBlock {
  blocks?: (TwoColumnLayoutBlock | Hero | CalendarEmbedBlock)[] | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'layout';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "SchedulePageBlock".
 */
export interface SchedulePageBlock {
  title?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'schedulePage';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "bookings".
 */
export interface Booking {
  id: string;
  title: string;
  /**
   * Event type duration (e.g., 60min, 30min)
   */
  type: string;
  description?: string | null;
  additionalNotes?: string | null;
  startTime: string;
  endTime: string;
  status: 'confirmed' | 'cancelled' | 'rescheduled' | 'pending' | 'rejected';
  organizer: {
    id?: number | null;
    name: string;
    email: string;
    username?: string | null;
    timeZone?: string | null;
    timeFormat?: string | null;
  };
  attendeeName: string;
  attendeeEmail: string;
  /**
   * Client linked to this booking (auto-populated via email match)
   */
  relatedClient?: (string | null) | Client;
  location?: string | null;
  /**
   * Cal.com booking UID
   */
  calcomBookingId?: string | null;
  eventTypeId?: number | null;
  /**
   * Additional form responses from Cal.com
   */
  customInputs?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Raw webhook payload for debugging
   */
  webhookData?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Whether this booking was created via Cal.com webhook
   */
  createdViaWebhook?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "clients".
 */
export interface Client {
  id: string;
  /**
   * Full name (computed from first and last name)
   */
  name?: string | null;
  /**
   * Client headshot photo for identification during testing
   */
  headshot?: (string | null) | PrivateMedia;
  /**
   * Type of client - determines required fields
   */
  clientType?: ('probation' | 'employment' | 'self') | null;
  /**
   * Whether this client is active
   */
  isActive?: boolean | null;
  firstName: string;
  lastName: string;
  /**
   * Date of birth
   */
  dob?: string | null;
  /**
   * Client gender identity
   */
  gender?: ('male' | 'female' | 'other' | 'prefer-not-to-say') | null;
  /**
   * Phone number for contact
   */
  phone?: string | null;
  preferredContactMethod?: ('email' | 'phone' | 'sms') | null;
  /**
   * Court and probation officer information
   */
  courtInfo?: {
    /**
     * Name of the court
     */
    courtName: string;
    /**
     * Recipients who will receive test results
     */
    recipients?:
      | {
          /**
           * Name of recipient (probation officer, court clerk, etc.)
           */
          name: string;
          /**
           * Email address of recipient
           */
          email: string;
          id?: string | null;
        }[]
      | null;
    /**
     * Legacy field - Name of probation officer (use recipients array instead)
     */
    probationOfficerName?: string | null;
    /**
     * Legacy field - Email of probation officer (use recipients array instead)
     */
    probationOfficerEmail?: string | null;
    /**
     * Additional email to CC on test results
     */
    ccEmail?: string | null;
  };
  /**
   * Employer and contact information
   */
  employmentInfo?: {
    /**
     * Name of employer/company
     */
    employerName: string;
    /**
     * Name of HR contact or hiring manager
     */
    contactName: string;
    /**
     * Email of HR contact or hiring manager
     */
    contactEmail: string;
  };
  /**
   * Alternative recipient for test results (self-pay clients only)
   */
  alternativeRecipient?: {
    /**
     * Name of alternative recipient
     */
    name?: string | null;
    /**
     * Email of alternative recipient
     */
    email?: string | null;
  };
  /**
   * Drug tests automatically linked to this client
   */
  drugTests?: {
    docs?: (string | DrugTest)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  /**
   * Bookings automatically linked to this client
   */
  bookings?: {
    docs?: (string | Booking)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  /**
   * Track medications that may affect drug test results
   */
  medications?:
    | {
        /**
         * Brand or generic name of medication
         */
        medicationName: string;
        /**
         * Date medication was started
         */
        startDate: string;
        /**
         * Date medication was discontinued (leave empty if current)
         */
        endDate?: string | null;
        /**
         * Current status of this medication. If you need to resume a discontinued medication, add it as a new entry to maintain proper history.
         */
        status: 'active' | 'discontinued';
        /**
         * What substance(s) this medication shows as in drug tests. Select all that apply.
         */
        detectedAs?:
          | (
              | '6-mam'
              | 'amphetamines'
              | 'barbiturates'
              | 'benzodiazepines'
              | 'buprenorphine'
              | 'cocaine'
              | 'etg'
              | 'fentanyl'
              | 'kratom'
              | 'mdma'
              | 'methadone'
              | 'methamphetamines'
              | 'opiates'
              | 'oxycodone'
              | 'pcp'
              | 'propoxyphene'
              | 'synthetic_cannabinoids'
              | 'thc'
              | 'tramadol'
              | 'tricyclic_antidepressants'
              | 'none'
            )[]
          | null;
        /**
         * Additional notes about this medication
         */
        notes?: string | null;
        /**
         * When this medication was added to the system - editable by super admins only
         */
        createdAt?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Private documents linked to this client
   */
  privateDocuments?: {
    docs?: (string | PrivateMedia)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  /**
   * Internal notes about the client (not visible to client)
   */
  notes?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  _verified?: boolean | null;
  _verificationToken?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * Secure file storage for sensitive documents
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "private-media".
 */
export interface PrivateMedia {
  id: string;
  /**
   * Alternative text for SEO and accessibility
   */
  alt?: string | null;
  /**
   * Type of private document
   */
  documentType: 'drug-test-report' | 'client-document' | 'headshot';
  /**
   * Client this document belongs to
   */
  relatedClient?: (string | null) | Client;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * Track drug test results and workflow
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "drug-tests".
 */
export interface DrugTest {
  id: string;
  /**
   * Client this drug test belongs to
   */
  relatedClient: string | Client;
  /**
   * Date and time the sample was collected
   */
  collectionDate?: string | null;
  /**
   * Type of drug test panel used
   */
  testType: '11-panel-lab' | '15-panel-instant' | '17-panel-sos-lab';
  /**
   * Current workflow status. Set to "Screened" when entering test results.
   */
  screeningStatus: 'collected' | 'screened' | 'confirmation-pending' | 'complete';
  /**
   * Date and time when screening was completed
   */
  screeningCompletedAt?: string | null;
  /**
   * RAW TEST RESULTS: Which substances tested positive? Leave empty if all negative. Select only substances that appear on your specific test panel.
   */
  detectedSubstances?:
    | (
        | '6-mam'
        | 'amphetamines'
        | 'barbiturates'
        | 'benzodiazepines'
        | 'buprenorphine'
        | 'cocaine'
        | 'etg'
        | 'fentanyl'
        | 'kratom'
        | 'mdma'
        | 'methadone'
        | 'methamphetamines'
        | 'opiates'
        | 'oxycodone'
        | 'pcp'
        | 'propoxyphene'
        | 'synthetic_cannabinoids'
        | 'thc'
        | 'tramadol'
        | 'tricyclic_antidepressants'
      )[]
    | null;
  /**
   * AUTO-COMPUTED: Substances expected to be positive based on client medications
   */
  expectedPositives?:
    | (
        | '6-mam'
        | 'amphetamines'
        | 'barbiturates'
        | 'benzodiazepines'
        | 'buprenorphine'
        | 'cocaine'
        | 'etg'
        | 'fentanyl'
        | 'kratom'
        | 'mdma'
        | 'methadone'
        | 'methamphetamines'
        | 'opiates'
        | 'oxycodone'
        | 'pcp'
        | 'propoxyphene'
        | 'synthetic_cannabinoids'
        | 'thc'
        | 'tramadol'
        | 'tricyclic_antidepressants'
      )[]
    | null;
  /**
   * AUTO-COMPUTED: Substances that tested positive but were NOT expected (FAIL)
   */
  unexpectedPositives?:
    | (
        | '6-mam'
        | 'amphetamines'
        | 'barbiturates'
        | 'benzodiazepines'
        | 'buprenorphine'
        | 'cocaine'
        | 'etg'
        | 'fentanyl'
        | 'kratom'
        | 'mdma'
        | 'methadone'
        | 'methamphetamines'
        | 'opiates'
        | 'oxycodone'
        | 'pcp'
        | 'propoxyphene'
        | 'synthetic_cannabinoids'
        | 'thc'
        | 'tramadol'
        | 'tricyclic_antidepressants'
      )[]
    | null;
  /**
   * AUTO-COMPUTED: Medications that should show positive but DIDN'T (Warning - Yellow Flag)
   */
  unexpectedNegatives?:
    | (
        | '6-mam'
        | 'amphetamines'
        | 'barbiturates'
        | 'benzodiazepines'
        | 'buprenorphine'
        | 'cocaine'
        | 'etg'
        | 'fentanyl'
        | 'kratom'
        | 'mdma'
        | 'methadone'
        | 'methamphetamines'
        | 'opiates'
        | 'oxycodone'
        | 'pcp'
        | 'propoxyphene'
        | 'synthetic_cannabinoids'
        | 'thc'
        | 'tramadol'
        | 'tricyclic_antidepressants'
      )[]
    | null;
  /**
   * AUTO-COMPUTED: Overall test result classification based on business logic
   */
  initialScreenResult?:
    | (
        | 'negative'
        | 'expected-positive'
        | 'unexpected-positive'
        | 'unexpected-negative'
        | 'mixed-unexpected'
        | 'inconclusive'
      )
    | null;
  /**
   * AUTO-SELECTED as "accept" for negative/expected-positive results. REQUIRED CHOICE for unexpected results.
   */
  confirmationDecision?: ('accept' | 'request-confirmation') | null;
  /**
   * Date and time confirmation was requested
   */
  confirmationRequestedAt?: string | null;
  /**
   * Which substances require confirmation testing
   */
  confirmationSubstances?:
    | (
        | '6-mam'
        | 'amphetamines'
        | 'barbiturates'
        | 'benzodiazepines'
        | 'buprenorphine'
        | 'cocaine'
        | 'etg'
        | 'fentanyl'
        | 'kratom'
        | 'mdma'
        | 'methadone'
        | 'methamphetamines'
        | 'opiates'
        | 'oxycodone'
        | 'pcp'
        | 'propoxyphene'
        | 'synthetic_cannabinoids'
        | 'thc'
        | 'tramadol'
        | 'tricyclic_antidepressants'
      )[]
    | null;
  /**
   * Mark if the test sample was dilute
   */
  isDilute?: boolean | null;
  /**
   * Individual confirmation test results for each substance
   */
  confirmationResults?:
    | {
        /**
         * Which substance was tested in the confirmation
         */
        substance:
          | '6-mam'
          | 'amphetamines'
          | 'barbiturates'
          | 'benzodiazepines'
          | 'buprenorphine'
          | 'cocaine'
          | 'etg'
          | 'fentanyl'
          | 'kratom'
          | 'mdma'
          | 'methadone'
          | 'methamphetamines'
          | 'opiates'
          | 'oxycodone'
          | 'pcp'
          | 'propoxyphene'
          | 'synthetic_cannabinoids'
          | 'thc'
          | 'tramadol'
          | 'tricyclic_antidepressants';
        /**
         * Lab confirmation result for this specific substance
         */
        result: 'confirmed-positive' | 'confirmed-negative' | 'inconclusive';
        /**
         * Optional notes about this confirmation result
         */
        notes?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * AUTO-COMPUTED: Complete when auto-accepted, manually accepted, or all confirmation results received
   */
  isComplete?: boolean | null;
  /**
   * Snapshot of active medications at time of test (auto-populated from client, editable by superAdmin only)
   */
  medicationsAtTestTime?: string | null;
  /**
   * Internal process notes and status updates
   */
  processNotes?: string | null;
  /**
   * Drug test report document (PDF)
   */
  testDocument?: (string | null) | PrivateMedia;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: string;
  form: string | Form;
  data:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "admins".
 */
export interface Admin {
  id: string;
  name?: string | null;
  role?: ('admin' | 'superAdmin') | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "technicians".
 */
export interface Technician {
  id: string;
  name: string;
  bio: string;
  gender: 'male' | 'female';
  photo?: (string | null) | Media;
  /**
   * Cal.com username for booking appointments
   */
  calComUsername: string;
  location: 'charlevoix';
  availability?: {
    mornings?: boolean | null;
    evenings?: boolean | null;
    weekdays?: boolean | null;
    weekends?: boolean | null;
  };
  /**
   * Inactive technicians will not appear in scheduling
   */
  isActive?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "exports".
 */
export interface Export {
  id: string;
  name?: string | null;
  format?: ('csv' | 'json') | null;
  limit?: number | null;
  page?: number | null;
  sort?: string | null;
  sortOrder?: ('asc' | 'desc') | null;
  drafts?: ('yes' | 'no') | null;
  selectionToUse?: ('currentSelection' | 'currentFilters' | 'all') | null;
  fields?: string[] | null;
  collectionSlug: string;
  where?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: string;
  /**
   * You will need to rebuild the website when changing this field.
   */
  from: string;
  to?: {
    type?: ('reference' | 'custom') | null;
    reference?: {
      relationTo: 'pages';
      value: string | Page;
    } | null;
    url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs".
 */
export interface PayloadJob {
  id: string;
  /**
   * Input data provided to the job
   */
  input?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  taskStatus?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  completedAt?: string | null;
  totalTried?: number | null;
  /**
   * If hasError is true this job will not be retried
   */
  hasError?: boolean | null;
  /**
   * If hasError is true, this is the error that caused it
   */
  error?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Task execution log
   */
  log?:
    | {
        executedAt: string;
        completedAt: string;
        taskSlug: 'inline' | 'createCollectionExport';
        taskID: string;
        input?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        output?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        state: 'failed' | 'succeeded';
        error?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
      }[]
    | null;
  taskSlug?: ('inline' | 'createCollectionExport') | null;
  queue?: string | null;
  waitUntil?: string | null;
  processing?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'pages';
        value: string | Page;
      } | null)
    | ({
        relationTo: 'bookings';
        value: string | Booking;
      } | null)
    | ({
        relationTo: 'forms';
        value: string | Form;
      } | null)
    | ({
        relationTo: 'form-submissions';
        value: string | FormSubmission;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'private-media';
        value: string | PrivateMedia;
      } | null)
    | ({
        relationTo: 'admins';
        value: string | Admin;
      } | null)
    | ({
        relationTo: 'technicians';
        value: string | Technician;
      } | null)
    | ({
        relationTo: 'clients';
        value: string | Client;
      } | null)
    | ({
        relationTo: 'drug-tests';
        value: string | DrugTest;
      } | null)
    | ({
        relationTo: 'exports';
        value: string | Export;
      } | null)
    | ({
        relationTo: 'redirects';
        value: string | Redirect;
      } | null)
    | ({
        relationTo: 'payload-jobs';
        value: string | PayloadJob;
      } | null);
  globalSlug?: string | null;
  user:
    | {
        relationTo: 'admins';
        value: string | Admin;
      }
    | {
        relationTo: 'clients';
        value: string | Client;
      };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user:
    | {
        relationTo: 'admins';
        value: string | Admin;
      }
    | {
        relationTo: 'clients';
        value: string | Client;
      };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  layout?:
    | T
    | {
        calendarEmbed?: T | CalendarEmbedBlockSelect<T>;
        hero?: T | HeroSelect<T>;
        about?: T | AboutSelect<T>;
        trust?: T | TrustBlockSelect<T>;
        techniciansBlock?: T | TechniciansBlockSelect<T>;
        richText?: T | RichTextBlockSelect<T>;
        linksBlock?: T | LinksBlockSelect<T>;
        formBlock?: T | FormBlockSelect<T>;
        TwoColumnLayout?: T | TwoColumnLayoutBlockSelect<T>;
        layout?: T | LayoutBlockSelect<T>;
        schedulePage?: T | SchedulePageBlockSelect<T>;
      };
  meta?:
    | T
    | {
        hideFromSearchEngines?: T;
        metadata?:
          | T
          | {
              title?: T;
              image?: T;
              description?: T;
            };
      };
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CalendarEmbedBlock_select".
 */
export interface CalendarEmbedBlockSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  calLink?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Hero_select".
 */
export interface HeroSelect<T extends boolean = true> {
  type?: T;
  highImpact?:
    | T
    | {
        title?: T;
        description?: T;
        links?: T | LinkGroupSelect<T>;
      };
  mediumImpact?:
    | T
    | {
        subtitle?: T;
        title?: T;
        heading?: T;
        description?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LinkGroup_select".
 */
export interface LinkGroupSelect<T extends boolean = true> {
  link?: T | LinkSelect<T>;
  id?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Link_select".
 */
export interface LinkSelect<T extends boolean = true> {
  type?: T;
  newTab?: T;
  reference?: T;
  url?: T;
  label?: T;
  appearance?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "About_select".
 */
export interface AboutSelect<T extends boolean = true> {
  enabled?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TrustBlock_select".
 */
export interface TrustBlockSelect<T extends boolean = true> {
  heading?: T;
  description?: T;
  features?:
    | T
    | {
        title?: T;
        description?: T;
        icon?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TechniciansBlock_select".
 */
export interface TechniciansBlockSelect<T extends boolean = true> {
  heading?: T;
  description?: T;
  maxTechnicians?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "RichTextBlock_select".
 */
export interface RichTextBlockSelect<T extends boolean = true> {
  subtitle?: T;
  richContent?: T;
  priority?: T;
  images?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LinksBlock_select".
 */
export interface LinksBlockSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  linkCards?: T | LinkCardsSelect<T>;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LinkCards_select".
 */
export interface LinkCardsSelect<T extends boolean = true> {
  linkType?: T;
  title?: T;
  description?: T;
  imageUploadOption?: T;
  keywords?: T;
  image?: T;
  href?: T;
  id?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock_select".
 */
export interface FormBlockSelect<T extends boolean = true> {
  form?: T;
  enableIntro?: T;
  introContent?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TwoColumnLayoutBlock_select".
 */
export interface TwoColumnLayoutBlockSelect<T extends boolean = true> {
  direction?: T;
  breakpoint?: T;
  columnOne?:
    | T
    | {
        contentType?: T;
        verticalAlignment?: T;
        richText?: T;
        cta?:
          | T
          | {
              hasSubtitle?: T;
              subtitle?:
                | T
                | {
                    icon?: T;
                    text?: T;
                  };
              title?: T;
              heading?: T;
              description?: T;
              links?: T | LinkGroupSelect<T>;
            };
      };
  columnTwo?:
    | T
    | {
        contentType?: T;
        priority?: T;
        sticky?: T;
        images?: T;
        form?:
          | T
          | {
              formBlock?: T | FormBlockSelect<T>;
            };
        calendarEmbed?:
          | T
          | {
              calendarEmbed?: T | CalendarEmbedBlockSelect<T>;
            };
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LayoutBlock_select".
 */
export interface LayoutBlockSelect<T extends boolean = true> {
  blocks?:
    | T
    | {
        TwoColumnLayout?: T | TwoColumnLayoutBlockSelect<T>;
        hero?: T | HeroSelect<T>;
        calendarEmbed?: T | CalendarEmbedBlockSelect<T>;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "SchedulePageBlock_select".
 */
export interface SchedulePageBlockSelect<T extends boolean = true> {
  title?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "bookings_select".
 */
export interface BookingsSelect<T extends boolean = true> {
  title?: T;
  type?: T;
  description?: T;
  additionalNotes?: T;
  startTime?: T;
  endTime?: T;
  status?: T;
  organizer?:
    | T
    | {
        id?: T;
        name?: T;
        email?: T;
        username?: T;
        timeZone?: T;
        timeFormat?: T;
      };
  attendeeName?: T;
  attendeeEmail?: T;
  relatedClient?: T;
  location?: T;
  calcomBookingId?: T;
  eventTypeId?: T;
  customInputs?: T;
  webhookData?: T;
  createdViaWebhook?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  title?: T;
  formType?: T;
  fields?:
    | T
    | {
        checkbox?: T | CheckboxFormFieldSelect<T>;
        country?: T | CountryFormFieldSelect<T>;
        email?: T | EmailFormFieldSelect<T>;
        message?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        number?: T | NumberFormFieldSelect<T>;
        select?: T | SelectFormFieldSelect<T>;
        state?: T | StateFormFieldSelect<T>;
        text?: T | TextFormFieldSelect<T>;
        textarea?: T | TextareaFormFieldSelect<T>;
        phone?: T | PhoneFormFieldSelect<T>;
        array?: T | ArrayFormFieldSelect<T>;
        group?: T | GroupFormFieldSelect<T>;
      };
  form?: T;
  submitButtonLabel?: T;
  confirmationType?: T;
  confirmationMessage?: T;
  redirect?:
    | T
    | {
        type?: T;
        reference?: T;
        url?: T;
      };
  emails?:
    | T
    | {
        emailTo?: T;
        cc?: T;
        bcc?: T;
        replyTo?: T;
        emailFrom?: T;
        subject?: T;
        message?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CheckboxFormField_select".
 */
export interface CheckboxFormFieldSelect<T extends boolean = true> {
  name?: T;
  label?: T;
  colSpan?: T;
  errorMsg?: T;
  defaultValue?: T;
  required?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CountryFormField_select".
 */
export interface CountryFormFieldSelect<T extends boolean = true> {
  name?: T;
  label?: T;
  colSpan?: T;
  required?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "EmailFormField_select".
 */
export interface EmailFormFieldSelect<T extends boolean = true> {
  name?: T;
  label?: T;
  colSpan?: T;
  required?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "NumberFormField_select".
 */
export interface NumberFormFieldSelect<T extends boolean = true> {
  name?: T;
  label?: T;
  colSpan?: T;
  defaultValue?: T;
  min?: T;
  minError?: T;
  max?: T;
  maxError?: T;
  required?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "SelectFormField_select".
 */
export interface SelectFormFieldSelect<T extends boolean = true> {
  name?: T;
  label?: T;
  colSpan?: T;
  defaultValue?: T;
  options?:
    | T
    | {
        label?: T;
        value?: T;
        id?: T;
      };
  required?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "StateFormField_select".
 */
export interface StateFormFieldSelect<T extends boolean = true> {
  name?: T;
  label?: T;
  colSpan?: T;
  required?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TextFormField_select".
 */
export interface TextFormFieldSelect<T extends boolean = true> {
  name?: T;
  label?: T;
  colSpan?: T;
  defaultValue?: T;
  required?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TextareaFormField_select".
 */
export interface TextareaFormFieldSelect<T extends boolean = true> {
  name?: T;
  label?: T;
  colSpan?: T;
  defaultValue?: T;
  required?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PhoneFormField_select".
 */
export interface PhoneFormFieldSelect<T extends boolean = true> {
  name?: T;
  label?: T;
  colSpan?: T;
  required?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArrayFormField_select".
 */
export interface ArrayFormFieldSelect<T extends boolean = true> {
  name?: T;
  label?: T;
  title?: T;
  description?: T;
  colSpan?: T;
  minRows?: T;
  maxRows?: T;
  fields?:
    | T
    | {
        text?: T | TextFormFieldSelect<T>;
        textarea?: T | TextareaFormFieldSelect<T>;
        email?: T | EmailFormFieldSelect<T>;
        number?: T | NumberFormFieldSelect<T>;
        checkbox?: T | CheckboxFormFieldSelect<T>;
        phone?: T | PhoneFormFieldSelect<T>;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "GroupFormField_select".
 */
export interface GroupFormFieldSelect<T extends boolean = true> {
  name?: T;
  title?: T;
  description?: T;
  fields?:
    | T
    | {
        text?: T | TextFormFieldSelect<T>;
        textarea?: T | TextareaFormFieldSelect<T>;
        email?: T | EmailFormFieldSelect<T>;
        number?: T | NumberFormFieldSelect<T>;
        checkbox?: T | CheckboxFormFieldSelect<T>;
        phone?: T | PhoneFormFieldSelect<T>;
        array?: T | ArrayFormFieldSelect<T>;
        select?: T | SelectFormFieldSelect<T>;
        state?: T | StateFormFieldSelect<T>;
        country?: T | CountryFormFieldSelect<T>;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions_select".
 */
export interface FormSubmissionsSelect<T extends boolean = true> {
  form?: T;
  data?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  prefix?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        meta?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "private-media_select".
 */
export interface PrivateMediaSelect<T extends boolean = true> {
  alt?: T;
  documentType?: T;
  relatedClient?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "admins_select".
 */
export interface AdminsSelect<T extends boolean = true> {
  name?: T;
  role?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "technicians_select".
 */
export interface TechniciansSelect<T extends boolean = true> {
  name?: T;
  bio?: T;
  gender?: T;
  photo?: T;
  calComUsername?: T;
  location?: T;
  availability?:
    | T
    | {
        mornings?: T;
        evenings?: T;
        weekdays?: T;
        weekends?: T;
      };
  isActive?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "clients_select".
 */
export interface ClientsSelect<T extends boolean = true> {
  name?: T;
  headshot?: T;
  clientType?: T;
  isActive?: T;
  firstName?: T;
  lastName?: T;
  dob?: T;
  gender?: T;
  phone?: T;
  preferredContactMethod?: T;
  courtInfo?:
    | T
    | {
        courtName?: T;
        recipients?:
          | T
          | {
              name?: T;
              email?: T;
              id?: T;
            };
        probationOfficerName?: T;
        probationOfficerEmail?: T;
        ccEmail?: T;
      };
  employmentInfo?:
    | T
    | {
        employerName?: T;
        contactName?: T;
        contactEmail?: T;
      };
  alternativeRecipient?:
    | T
    | {
        name?: T;
        email?: T;
      };
  drugTests?: T;
  bookings?: T;
  medications?:
    | T
    | {
        medicationName?: T;
        startDate?: T;
        endDate?: T;
        status?: T;
        detectedAs?: T;
        notes?: T;
        createdAt?: T;
        id?: T;
      };
  privateDocuments?: T;
  notes?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  _verified?: T;
  _verificationToken?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "drug-tests_select".
 */
export interface DrugTestsSelect<T extends boolean = true> {
  relatedClient?: T;
  collectionDate?: T;
  testType?: T;
  screeningStatus?: T;
  screeningCompletedAt?: T;
  detectedSubstances?: T;
  expectedPositives?: T;
  unexpectedPositives?: T;
  unexpectedNegatives?: T;
  initialScreenResult?: T;
  confirmationDecision?: T;
  confirmationRequestedAt?: T;
  confirmationSubstances?: T;
  isDilute?: T;
  confirmationResults?:
    | T
    | {
        substance?: T;
        result?: T;
        notes?: T;
        id?: T;
      };
  isComplete?: T;
  medicationsAtTestTime?: T;
  processNotes?: T;
  testDocument?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "exports_select".
 */
export interface ExportsSelect<T extends boolean = true> {
  name?: T;
  format?: T;
  limit?: T;
  page?: T;
  sort?: T;
  sortOrder?: T;
  drafts?: T;
  selectionToUse?: T;
  fields?: T;
  collectionSlug?: T;
  where?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects_select".
 */
export interface RedirectsSelect<T extends boolean = true> {
  from?: T;
  to?:
    | T
    | {
        type?: T;
        reference?: T;
        url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs_select".
 */
export interface PayloadJobsSelect<T extends boolean = true> {
  input?: T;
  taskStatus?: T;
  completedAt?: T;
  totalTried?: T;
  hasError?: T;
  error?: T;
  log?:
    | T
    | {
        executedAt?: T;
        completedAt?: T;
        taskSlug?: T;
        taskID?: T;
        input?: T;
        output?: T;
        state?: T;
        error?: T;
        id?: T;
      };
  taskSlug?: T;
  queue?: T;
  waitUntil?: T;
  processing?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: string;
  navItems?:
    | {
        link: Link;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: string;
  pageLinks?:
    | {
        link: Link;
        id?: string | null;
      }[]
    | null;
  showContact?: boolean | null;
  showGoogleMap?: boolean | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "company-info".
 */
export interface CompanyInfo {
  id: string;
  contact: {
    name?: string | null;
    email?: string | null;
    phone?: string | null;
    fax?: string | null;
    physicalAddress: {
      street: string;
      cityStateZip: string;
      /**
       * Select the exact location on Google Maps
       *
       * @minItems 2
       * @maxItems 2
       */
      coordinates?: [number, number] | null;
      /**
       * Link to the location on Google Maps
       */
      googleMapLink?: string | null;
    };
    mailingAddress: {
      street: string;
      cityStateZip: string;
    };
  };
  social?:
    | {
        platform?: string | null;
        link: Link;
        id?: string | null;
      }[]
    | null;
  hours?:
    | {
        type?: ('default' | 'custom') | null;
        day?: string | null;
        hours?: string | null;
        note?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  navItems?:
    | T
    | {
        link?: T | LinkSelect<T>;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  pageLinks?:
    | T
    | {
        link?: T | LinkSelect<T>;
        id?: T;
      };
  showContact?: T;
  showGoogleMap?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "company-info_select".
 */
export interface CompanyInfoSelect<T extends boolean = true> {
  contact?:
    | T
    | {
        name?: T;
        email?: T;
        phone?: T;
        fax?: T;
        physicalAddress?:
          | T
          | {
              street?: T;
              cityStateZip?: T;
              coordinates?: T;
              googleMapLink?: T;
            };
        mailingAddress?:
          | T
          | {
              street?: T;
              cityStateZip?: T;
            };
      };
  social?:
    | T
    | {
        platform?: T;
        link?: T | LinkSelect<T>;
        id?: T;
      };
  hours?:
    | T
    | {
        type?: T;
        day?: T;
        hours?: T;
        note?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TaskCreateCollectionExport".
 */
export interface TaskCreateCollectionExport {
  input: {
    name?: string | null;
    format?: ('csv' | 'json') | null;
    limit?: number | null;
    page?: number | null;
    sort?: string | null;
    sortOrder?: ('asc' | 'desc') | null;
    drafts?: ('yes' | 'no') | null;
    selectionToUse?: ('currentSelection' | 'currentFilters' | 'all') | null;
    fields?: string[] | null;
    collectionSlug: string;
    where?:
      | {
          [k: string]: unknown;
        }
      | unknown[]
      | string
      | number
      | boolean
      | null;
    user?: string | null;
    userCollection?: string | null;
    exportsCollection?: string | null;
  };
  output?: unknown;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock".
 */
export interface MediaBlock {
  position?: ('default' | 'fullscreen') | null;
  media: string | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'mediaBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}